// Code generated by MockGen. DO NOT EDIT.
// Source: ResetLoginAttempts.go

// Package mocks is a generated GoMock package.
package mocks

import (
	entities "github.com/Rototot/anti-brute-force/pkg/domain/entities"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockbucketCleaner is a mock of bucketCleaner interface
type MockbucketCleaner struct {
	ctrl     *gomock.Controller
	recorder *MockbucketCleanerMockRecorder
}

// MockbucketCleanerMockRecorder is the mock recorder for MockbucketCleaner
type MockbucketCleanerMockRecorder struct {
	mock *MockbucketCleaner
}

// NewMockbucketCleaner creates a new mock instance
func NewMockbucketCleaner(ctrl *gomock.Controller) *MockbucketCleaner {
	mock := &MockbucketCleaner{ctrl: ctrl}
	mock.recorder = &MockbucketCleanerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockbucketCleaner) EXPECT() *MockbucketCleanerMockRecorder {
	return m.recorder
}

// Clean mocks base method
func (m *MockbucketCleaner) Clean(bucket *entities.Bucket) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Clean", bucket)
	ret0, _ := ret[0].(error)
	return ret0
}

// Clean indicates an expected call of Clean
func (mr *MockbucketCleanerMockRecorder) Clean(bucket interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Clean", reflect.TypeOf((*MockbucketCleaner)(nil).Clean), bucket)
}
